}
n=800
p=2000
k=20
n_train = 400
rho = 0.5
SNR =100
for(i in 1:5){
file_name = paste("lm_n_train", n_train, "p", p, "k", k, "cortype", 1, "SNRi", i, sep = "_")
file_name = paste0(file_name, ".rda")
load(file_name)
dat = rbind(dat, mean_res)
}
method = rep(c("L0L2.seq",
"PDAS",  "L0L2.powell",
"Lasso", "Elastic Net"), 5)
k_list = data.frame(value = dat[, 7], method = method, SNR = rep(SNRlist, each = 5), meric = "Model size")
#pe_list = data.frame(value = dat[, 5], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
pe2_list = data.frame(value = dat[, 6], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
tpr_list = data.frame(value = dat[, 1], method = method, SNR = rep(SNRlist, each = 5), meric = "TPR")
SNRlist = exp(seq(log(0.01), log(100), length.out = 5))
rholist = c(0.2, 0.4, 0.6, 0.8)
k_list = data.frame(value = dat[, 7], method = method, SNR = rep(SNRlist, each = 5), meric = "Model size")
#pe_list = data.frame(value = dat[, 5], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
pe2_list = data.frame(value = dat[, 6], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
tpr_list = data.frame(value = dat[, 1], method = method, SNR = rep(SNRlist, each = 5), meric = "TPR")
fpr_list = data.frame(value = dat[, 2], method = method, SNR = rep(SNRlist, each = 5), meric = "FPR")
mcc_list = data.frame(value = dat[, 3], method = method, SNR = rep(SNRlist, each = 5), meric = "MCC")
norm_list = data.frame(value = dat[, 4], method = method, SNR = rep(SNRlist, each = 5), meric = "Error bound")
data_long = rbind(k_list, pe2_list, tpr_list, fpr_list, mcc_list, norm_list)
scientific_10 <- function(x) {
parse(text=gsub( "1 e +"," %*% 10^", scales::scientific_format()(x)))
}
# cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
data_long$meric = factor(data_long$meric, levels = c("Prediction error", "Error bound", "TPR", "FPR", "MCC", "Model size"))
data_long$method = factor(data_long$method, levels = c("L0L2.seq", "L0L2.powell", "PDAS", "Lasso", "Elastic Net"))
p1=ggplot(data_long,aes(x=SNR,y=value,group=method))+
geom_line(aes(color=method),size=1, na.rm = T)+
geom_point(aes(color=method,shape=method), na.rm = T)+
#scale_linetype_manual(values=c("twodash", "dotted"))+
#theme_few(base_size = 14)+
#scale_fill_manual(values = cbPalette)+
facet_wrap(~meric, scales="free_y", nrow = 2) +
scale_x_log10(labels = scientific_10)+
theme(axis.title.x=element_text(size = 13),
# axis.text.x = element_text(angle = 30),
axis.text.x = element_text(),
axis.title.y=element_blank(),
#axis.text.y=element_blank(),
#legend.position = "none"
legend.position = "bottom",
legend.title=element_text(size=13),
legend.text=element_text(size=13),
#plot.title = element_text(size = 40, face = "bold"),
strip.text = element_text(size=13)
)
p1
method = rep(c("BSRR.seq",
"BSS",  "BSRR.powell",
"Lasso", "Elastic Net"), 5)
k_list = data.frame(value = dat[, 7], method = method, SNR = rep(SNRlist, each = 5), meric = "Model size")
#pe_list = data.frame(value = dat[, 5], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
pe2_list = data.frame(value = dat[, 6], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
tpr_list = data.frame(value = dat[, 1], method = method, SNR = rep(SNRlist, each = 5), meric = "TPR")
fpr_list = data.frame(value = dat[, 2], method = method, SNR = rep(SNRlist, each = 5), meric = "FPR")
mcc_list = data.frame(value = dat[, 3], method = method, SNR = rep(SNRlist, each = 5), meric = "MCC")
norm_list = data.frame(value = dat[, 4], method = method, SNR = rep(SNRlist, each = 5), meric = "Error bound")
data_long = rbind(k_list, pe2_list, tpr_list, fpr_list, mcc_list, norm_list)
scientific_10 <- function(x) {
parse(text=gsub( "1 e +"," %*% 10^", scales::scientific_format()(x)))
}
# cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
data_long$meric = factor(data_long$meric, levels = c("Prediction error", "Error bound", "TPR", "FPR", "MCC", "Model size"))
data_long$method = factor(data_long$method, levels = c("L0L2.seq", "L0L2.powell", "PDAS", "Lasso", "Elastic Net"))
p1=ggplot(data_long,aes(x=SNR,y=value,group=method))+
geom_line(aes(color=method),size=1, na.rm = T)+
geom_point(aes(color=method,shape=method), na.rm = T)+
#scale_linetype_manual(values=c("twodash", "dotted"))+
#theme_few(base_size = 14)+
#scale_fill_manual(values = cbPalette)+
facet_wrap(~meric, scales="free_y", nrow = 2) +
scale_x_log10(labels = scientific_10)+
theme(axis.title.x=element_text(size = 13),
# axis.text.x = element_text(angle = 30),
axis.text.x = element_text(),
axis.title.y=element_blank(),
#axis.text.y=element_blank(),
#legend.position = "none"
legend.position = "bottom",
legend.title=element_text(size=13),
legend.text=element_text(size=13),
#plot.title = element_text(size = 40, face = "bold"),
strip.text = element_text(size=13)
)
p1
data_long$method = factor(data_long$method, levels = c("BSRR.seq", "BSRR.powell", "BSS", "Lasso", "Elastic Net"))
p1=ggplot(data_long,aes(x=SNR,y=value,group=method))+
geom_line(aes(color=method),size=1, na.rm = T)+
geom_point(aes(color=method,shape=method), na.rm = T)+
#scale_linetype_manual(values=c("twodash", "dotted"))+
#theme_few(base_size = 14)+
#scale_fill_manual(values = cbPalette)+
facet_wrap(~meric, scales="free_y", nrow = 2) +
scale_x_log10(labels = scientific_10)+
theme(axis.title.x=element_text(size = 13),
# axis.text.x = element_text(angle = 30),
axis.text.x = element_text(),
axis.title.y=element_blank(),
#axis.text.y=element_blank(),
#legend.position = "none"
legend.position = "bottom",
legend.title=element_text(size=13),
legend.text=element_text(size=13),
#plot.title = element_text(size = 40, face = "bold"),
strip.text = element_text(size=13)
)
p1
# cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
data_long$meric = factor(data_long$meric, levels = c("Prediction error", "Error bound", "TPR", "FPR", "MCC", "Model size"))
data_long$method = factor(data_long$method, levels = c("BSRR.seq", "BSRR.powell", "BSS", "Lasso", "Elastic Net"))
p1=ggplot(data_long,aes(x=SNR,y=value,group=method))+
geom_line(aes(color=method),size=1, na.rm = T)+
geom_point(aes(color=method,shape=method), na.rm = T)+
#scale_linetype_manual(values=c("twodash", "dotted"))+
#theme_few(base_size = 14)+
#scale_fill_manual(values = cbPalette)+
facet_wrap(~meric, scales="free_y", nrow = 2) +
scale_x_log10(labels = scientific_10)+
theme(axis.title.x=element_text(size = 13),
# axis.text.x = element_text(angle = 30),
axis.text.x = element_text(),
axis.title.y=element_blank(),
#axis.text.y=element_blank(),
#legend.position = "none"
legend.position = "bottom",
legend.title=element_text(size=13),
legend.text=element_text(size=13),
#plot.title = element_text(size = 40, face = "bold"),
strip.text = element_text(size=13)
)
p1
method = rep(c("BSRR.seq",
"BSS",  "BSRR.powell",
"Lasso", "Elastic Net"), 5)
k_list = data.frame(value = dat[, 7], method = method, SNR = rep(SNRlist, each = 5), meric = "Model size")
#pe_list = data.frame(value = dat[, 5], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
pe2_list = data.frame(value = dat[, 6], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
tpr_list = data.frame(value = dat[, 1], method = method, SNR = rep(SNRlist, each = 5), meric = "TPR")
fpr_list = data.frame(value = dat[, 2], method = method, SNR = rep(SNRlist, each = 5), meric = "FPR")
mcc_list = data.frame(value = dat[, 3], method = method, SNR = rep(SNRlist, each = 5), meric = "MCC")
norm_list = data.frame(value = dat[, 4], method = method, SNR = rep(SNRlist, each = 5), meric = "Error bound")
data_long = rbind(k_list, pe2_list, tpr_list, fpr_list, mcc_list, norm_list)
scientific_10 <- function(x) {
parse(text=gsub( "1 e +"," %*% 10^", scales::scientific_format()(x)))
}
# cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
data_long$meric = factor(data_long$meric, levels = c("Prediction error", "Error bound", "TPR", "FPR", "MCC", "Model size"))
data_long$method = factor(data_long$method, levels = c("BSRR.seq", "BSRR.powell", "BSS", "Lasso", "Elastic Net"))
p1=ggplot(data_long,aes(x=SNR,y=value,group=method))+
geom_line(aes(color=method),size=1, na.rm = T)+
geom_point(aes(color=method,shape=method), na.rm = T)+
#scale_linetype_manual(values=c("twodash", "dotted"))+
#theme_few(base_size = 14)+
#scale_fill_manual(values = cbPalette)+
facet_wrap(~meric, scales="free_y", nrow = 2) +
scale_x_log10(labels = scientific_10)+
theme(axis.title.x=element_text(size = 13),
# axis.text.x = element_text(angle = 30),
axis.text.x = element_text(),
axis.title.y=element_blank(),
#axis.text.y=element_blank(),
#legend.position = "none"
legend.position = "bottom",
legend.title=element_text(size=13),
legend.text=element_text(size=13),
#plot.title = element_text(size = 40, face = "bold"),
strip.text = element_text(size=13)
)
p1
ggsave(filename = 'lm_n_train_400_p_2000_k_20_cortype_1_legend_changed.png',dpi=300,width=10.032,height = 7.464)
load("C:/Users/test/OneDrive/coding/Rbess/simu/logi/logi_n_train_400_p_2000_k_20_cortype_1.RData")
dat
method = rep(c("Grid-BSRR.seq",
"BSS",  "Powell-BSRR",
"Lasso", "Elastic Net"), 5)
method = rep(c("Grid-BSRR.seq",
"BSS",  "Powell-BSRR",
"Lasso", "Elastic Net"), 5)
k_list = data.frame(value = dat[, 2], method = method, SNR = rep(SNRlist, each = 5), meric = "Model size")
auc_list = data.frame(value = dat[, 3], method = method, SNR = rep(SNRlist, each = 5), meric = "AUC")
tpr_list = data.frame(value = dat[, 4], method = method, SNR = rep(SNRlist, each = 5), meric = "TPR")
fpr_list = data.frame(value = dat[, 5], method = method, SNR = rep(SNRlist, each = 5), meric = "FPR")
mcc_list = data.frame(value = dat[, 6], method = method, SNR = rep(SNRlist, each = 5), meric = "MCC")
norm_list = data.frame(value = dat[, 7], method = method, SNR = rep(SNRlist, each = 5), meric = "Error bound")
k_list = data.frame(value = dat[, 2], method = method, SNR = rep(c(SNRlist, 130, 150, 200, 1000), each = 5), meric = "Model size")
dat
k_list = data.frame(value = dat[, 6], method = method, SNR = rep(SNRlist, each = 5), meric = "Model size")
auc_list = data.frame(value = dat[, 5], method = method, SNR = rep(SNRlist, each = 5), meric = "AUC")
tpr_list = data.frame(value = dat[, 1], method = method, SNR = rep(SNRlist, each = 5), meric = "TPR")
fpr_list = data.frame(value = dat[, 2], method = method, SNR = rep(SNRlist, each = 5), meric = "FPR")
mcc_list = data.frame(value = dat[, 3], method = method, SNR = rep(SNRlist, each = 5), meric = "MCC")
norm_list = data.frame(value = dat[, 4], method = method, SNR = rep(SNRlist, each = 5), meric = "Error bound")
data_long = rbind(k_list, auc_list, tpr_list, fpr_list, mcc_list, norm_list)
scientific_10 <- function(x) {
parse(text=gsub( "1 e +"," %*% 10^", scales::scientific_format()(x)))
}
data_long = data_long[-(5*seq(1:60) - 2), ]
data_long = rbind(k_list, auc_list, tpr_list, fpr_list, mcc_list, norm_list)
scientific_10 <- function(x) {
parse(text=gsub( "1 e +"," %*% 10^", scales::scientific_format()(x)))
}
p1=ggplot(data_long,aes(x=SNR,y=value,group=method))+
geom_line(aes(color=method),size=1, na.rm = T)+
geom_point(aes(color=method,shape=method), na.rm = T)+
#scale_linetype_manual(values=c("twodash", "dotted"))+
#theme_few(base_size = 14)+
#scale_fill_manual(values = cbPalette)+
facet_wrap(~meric, scales="free_y", nrow = 2) +
scale_x_log10(labels = scientific_10)+
theme(axis.title.x=element_text(size = 13),
# axis.text.x = element_text(angle = 30),
axis.text.x = element_text(),
axis.title.y=element_blank(),
#axis.text.y=element_blank(),
#legend.position = "none"
legend.position = "bottom",
legend.title=element_text(size=13),
legend.text=element_text(size=13),
#plot.title = element_text(size = 40, face = "bold"),
strip.text = element_text(size=13)
)
p1
setwd("C:/Users/test/OneDrive/coding/Rbess/simu/logi")
ggsave(filename = 'legend_changed.png',dpi=300,width=10.032,height = 7.464)
load("C:/Users/test/OneDrive/coding/Rbess/simu/lm/lm_n_train_400_p_2000_k_20_cortype_1.RData")
method = rep(c("Grid-BSRR.seq",
"BSS",  "Powell-BSRR",
"Lasso", "Elastic Net"), 5)
k_list = data.frame(value = dat[, 7], method = method, SNR = rep(SNRlist, each = 5), meric = "Model size")
#pe_list = data.frame(value = dat[, 5], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
pe2_list = data.frame(value = dat[, 6], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
tpr_list = data.frame(value = dat[, 1], method = method, SNR = rep(SNRlist, each = 5), meric = "TPR")
fpr_list = data.frame(value = dat[, 2], method = method, SNR = rep(SNRlist, each = 5), meric = "FPR")
mcc_list = data.frame(value = dat[, 3], method = method, SNR = rep(SNRlist, each = 5), meric = "MCC")
norm_list = data.frame(value = dat[, 4], method = method, SNR = rep(SNRlist, each = 5), meric = "Error bound")
data_long = rbind(k_list, pe2_list, tpr_list, fpr_list, mcc_list, norm_list)
scientific_10 <- function(x) {
parse(text=gsub( "1 e +"," %*% 10^", scales::scientific_format()(x)))
}
# cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
data_long$meric = factor(data_long$meric, levels = c("Prediction error", "Error bound", "TPR", "FPR", "MCC", "Model size"))
data_long$method = factor(data_long$method, levels = c("BSRR.seq", "BSRR.powell", "BSS", "Lasso", "Elastic Net"))
p1=ggplot(data_long,aes(x=SNR,y=value,group=method))+
geom_line(aes(color=method),size=1, na.rm = T)+
geom_point(aes(color=method,shape=method), na.rm = T)+
#scale_linetype_manual(values=c("twodash", "dotted"))+
#theme_few(base_size = 14)+
#scale_fill_manual(values = cbPalette)+
facet_wrap(~meric, scales="free_y", nrow = 2) +
scale_x_log10(labels = scientific_10)+
theme(axis.title.x=element_text(size = 13),
# axis.text.x = element_text(angle = 30),
axis.text.x = element_text(),
axis.title.y=element_blank(),
#axis.text.y=element_blank(),
#legend.position = "none"
legend.position = "bottom",
legend.title=element_text(size=13),
legend.text=element_text(size=13),
#plot.title = element_text(size = 40, face = "bold"),
strip.text = element_text(size=13)
)
p1
setwd('C:/Users/test/OneDrive/coding/Rbess/simu/lm')
dat
# cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
data_long$meric = factor(data_long$meric, levels = c("Prediction error", "Error bound", "TPR", "FPR", "MCC", "Model size"))
data_long$method = factor(data_long$method, levels = c("Grid-BSRR", "Powell-BSRR", "BSS", "Lasso", "Elastic Net"))
p1=ggplot(data_long,aes(x=SNR,y=value,group=method))+
geom_line(aes(color=method),size=1, na.rm = T)+
geom_point(aes(color=method,shape=method), na.rm = T)+
#scale_linetype_manual(values=c("twodash", "dotted"))+
#theme_few(base_size = 14)+
#scale_fill_manual(values = cbPalette)+
facet_wrap(~meric, scales="free_y", nrow = 2) +
scale_x_log10(labels = scientific_10)+
theme(axis.title.x=element_text(size = 13),
# axis.text.x = element_text(angle = 30),
axis.text.x = element_text(),
axis.title.y=element_blank(),
#axis.text.y=element_blank(),
#legend.position = "none"
legend.position = "bottom",
legend.title=element_text(size=13),
legend.text=element_text(size=13),
#plot.title = element_text(size = 40, face = "bold"),
strip.text = element_text(size=13)
)
p1
method = rep(c("Grid-BSRR",
"BSS",  "Powell-BSRR",
"Lasso", "Elastic Net"), 5)
k_list = data.frame(value = dat[, 7], method = method, SNR = rep(SNRlist, each = 5), meric = "Model size")
#pe_list = data.frame(value = dat[, 5], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
pe2_list = data.frame(value = dat[, 6], method = method, SNR = rep(SNRlist, each = 5), meric = "Prediction error")
tpr_list = data.frame(value = dat[, 1], method = method, SNR = rep(SNRlist, each = 5), meric = "TPR")
fpr_list = data.frame(value = dat[, 2], method = method, SNR = rep(SNRlist, each = 5), meric = "FPR")
mcc_list = data.frame(value = dat[, 3], method = method, SNR = rep(SNRlist, each = 5), meric = "MCC")
norm_list = data.frame(value = dat[, 4], method = method, SNR = rep(SNRlist, each = 5), meric = "Error bound")
data_long = rbind(k_list, pe2_list, tpr_list, fpr_list, mcc_list, norm_list)
scientific_10 <- function(x) {
parse(text=gsub( "1 e +"," %*% 10^", scales::scientific_format()(x)))
}
# cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
data_long$meric = factor(data_long$meric, levels = c("Prediction error", "Error bound", "TPR", "FPR", "MCC", "Model size"))
data_long$method = factor(data_long$method, levels = c("Grid-BSRR", "Powell-BSRR", "BSS", "Lasso", "Elastic Net"))
p1=ggplot(data_long,aes(x=SNR,y=value,group=method))+
geom_line(aes(color=method),size=1, na.rm = T)+
geom_point(aes(color=method,shape=method), na.rm = T)+
#scale_linetype_manual(values=c("twodash", "dotted"))+
#theme_few(base_size = 14)+
#scale_fill_manual(values = cbPalette)+
facet_wrap(~meric, scales="free_y", nrow = 2) +
scale_x_log10(labels = scientific_10)+
theme(axis.title.x=element_text(size = 13),
# axis.text.x = element_text(angle = 30),
axis.text.x = element_text(),
axis.title.y=element_blank(),
#axis.text.y=element_blank(),
#legend.position = "none"
legend.position = "bottom",
legend.title=element_text(size=13),
legend.text=element_text(size=13),
#plot.title = element_text(size = 40, face = "bold"),
strip.text = element_text(size=13)
)
p1
ggsave(filename = 'lm_n_train_400_p_2000_k_20_cortype_1_legend_changed.png',dpi=300,width=10.032,height = 7.464)
library(BeSS)
data("eyedata", package = picasso)
data("eyedata", package = "picasso")
lm.bsrr = bess(x, y, type = "bsrr", lambda.max = 100, lambda.min = 0.01)
coef(lm.bsrr, sparse = FALSE)[which(coef(lm.bsrr, sparse = FALSE)!=0)]
?coef.bess
predict.bsrr = predict(lm.bsrr, newx = x)
predict.bsrr = predict(lm.bsrr, newx = x)
data(duke, package = "dglars")
y = duke$y
x = duke[, -1]
logi.bsrr = bess(x, y, family = "binomial", type = "bsrr",
lambda.max = 10, lambda.min = 0.01, screening.num = 100)
logi.bsrr = bess(x, y, family = "binomial", type = "bsrr",
lambda.max = 10, lambda.min = 0.01)
print(logi.bsrr, nonzero = TRUE)
plot(logi.bsrr)
data(LymphomaData, package = "HCmodelSets")
x = t(patient.data$x)
y = patient.data$time
status = patient.data$status
cox.bsrr = bess(x, cbind(y, status), family = "cox", type = "bsrr")
cox.bsrr = bess(x, cbind(y, status), family = "cox", type = "bsrr")
summary(cox.bsrr)
data("eyedata", package = picasso)
data("eyedata", package = "picasso")
lm.bsrr.EBIC = bess(x, y, type = "bsrr", tune = "ebic")
lm.bsrr.cv = bess(x, y, type = "bsrr", tune = "cv", nfolds = 5)
lm.bsrr.EBIC = bess(x, y, type = "bsrr", tune = "ebic")
library(L0Learn)
?coef.L0Learn
?predict.bess
logi.bsrr <- bess(x, y, family = "binomial", type = "bsrr")
data(duke, package = "dglars")
y <- duke$y
x <- duke[, -1]
logi.bsrr <- bess(x, y, family = "binomial", type = "bsrr")
print(logi.bsrr, nonzero = TRUE)
plot(logi.bsrr)
data(LymphomaData, package = "HCmodelSets")
x <- t(patient.data$x)
y <- patient.data$time
status <- patient.data$status
cox.bsrr <- bess(x, cbind(y, status), family = "cox", type = "bsrr")
summary(cox.bsrr)
dat
load("C:/Users/test/OneDrive/coding/Rbess/simu/logi/logi_n_train_400_p_2000_k_20_cortype_1.RData")
dat
method = rep(c("Grid-BSRR",
"BSS",  "Powell-BSRR",
"Lasso", "Elastic Net"), 5)
k_list = data.frame(value = dat[, 6], method = method, SNR = rep(SNRlist, each = 5), meric = "Model size")
auc_list = data.frame(value = dat[, 5], method = method, SNR = rep(SNRlist, each = 5), meric = "AUC")
tpr_list = data.frame(value = dat[, 1], method = method, SNR = rep(SNRlist, each = 5), meric = "TPR")
fpr_list = data.frame(value = dat[, 2], method = method, SNR = rep(SNRlist, each = 5), meric = "FPR")
mcc_list = data.frame(value = dat[, 3], method = method, SNR = rep(SNRlist, each = 5), meric = "MCC")
norm_list = data.frame(value = dat[, 4], method = method, SNR = rep(SNRlist, each = 5), meric = "Error bound")
data_long = rbind(k_list, auc_list, tpr_list, fpr_list, mcc_list, norm_list)
scientific_10 <- function(x) {
parse(text=gsub( "1 e +"," %*% 10^", scales::scientific_format()(x)))
}
# cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
data_long$method = factor(data_long$method, levels = c("Grid-BSRR", "Powell-BSRR", "BSS", "Lasso", "Elastic Net"))
p1=ggplot(data_long,aes(x=SNR,y=value,group=method))+
geom_line(aes(color=method),size=1, na.rm = T)+
geom_point(aes(color=method,shape=method), na.rm = T)+
#scale_linetype_manual(values=c("twodash", "dotted"))+
#theme_few(base_size = 14)+
#scale_fill_manual(values = cbPalette)+
facet_wrap(~meric, scales="free_y", nrow = 2) +
scale_x_log10(labels = scientific_10)+
theme(axis.title.x=element_text(size = 13),
# axis.text.x = element_text(angle = 30),
axis.text.x = element_text(),
axis.title.y=element_blank(),
#axis.text.y=element_blank(),
#legend.position = "none"
legend.position = "bottom",
legend.title=element_text(size=13),
legend.text=element_text(size=13),
#plot.title = element_text(size = 40, face = "bold"),
strip.text = element_text(size=13)
)
p1
setwd("C:/Users/test/OneDrive/coding/Rbess/simu/logi")
ggsave(filename = 'legend_changed.png',dpi=300,width=10.032,height = 7.464)
remove.packages("BeSS", lib="~/R/win-library/3.6")
library(BeSS)
library(devtools)
check_rhub()
document()
library(BeSS)
library(devtools)
check()
devtools::document()
check()
devtools::document()
devtools::document()
devtools::document()
library(BeSS)
#' #-------------------linear model----------------------#
#' # Generate simulated data
n <- 200
p <- 20
k <- 5
rho <- 0.4
SNR <- 10
cortype <- 1
seed <- 10
Data <- gen.data(n, p, k, rho, family = "gaussian", cortype = cortype, SNR = SNR, seed = seed)
x <- Data$x[1:140, ]
library(BeSS)
Data <- gen.data(n, p, k, rho, family = "gaussian", cortype = cortype, SNR = SNR, seed = seed)
Data <- gen.data(n, p, k, rho, family = "gaussian", cortype = cortype, snr = SNR, seed = seed)
x <- Data$x[1:140, ]
y <- Data$y[1:140]
x_new <- Data$x[141:200, ]
y_new <- Data$y[141:200]
lm.bss <- bess(x, y, method = "sequential")
lm.bss <- bess(x, y, method = "sequential")
devtools::document()
dist
method = 2
pmatch(method, "euclidian")
!is.na(pmatch(method, "euclidian"))
?pmatch
library(BeSS)
METHODS <- c("euclidean", "maximum", "manhattan",
"canberra", "binary", "minkowski")
method <- pmatch(method, METHODS)
method
if (is.na(method))
stop("invalid distance method")
method = "m"
METHODS <- c("euclidean", "maximum", "manhattan",
"canberra", "binary", "minkowski")
method <- pmatch(method, METHODS)
method
method = "man"
method <- pmatch(method, METHODS)
method
method="ma"
method <- pmatch(method, METHODS)
method
method = "maht"
method <- pmatch(method, METHODS)
method
method = "mabi"
method <- pmatch(method, METHODS)
method
?dist
?pmatch
?dist
# family <- match.arg(family)
FAMILY <- c("gaussian", "binomial", "poisson", "cox")
devtools::document()
library(BeSS)
library(BeSS)
n = 100
p = 30
k = 2
rho = 0.8
SNR = 100
cortype = 1
seed = 100
Data = BeSS::gen.data(n, p, k, rho, family = "binomial", cortype=cortype, snr=SNR, seed=seed, scal=10)
#Data = Rbess::gen.data(n, p, k, rho, family = "binomial", cortype=cortype, SNR=SNR, seed=seed)
#Data = BeSS::gen.data(n, p, k, family = "gaussian")
x = Data$x
y = Data$y
res = bess(x, y, family = "binomial",s.list = 1:3, s.max=3, screening.num = 5, method = "sequential")
devtools::document()
library(BeSS)
res = bess(x, y, family = "binomial",s.list = 1:3, s.max=3, screening.num = 5, method = "sequential")
